name: CI/CD Pipeline - Build and Deploy Docker Image

on:
  workflow_dispatch: # Allow manual triggering
  push:
    branches: [ main, develop ] # develop branch is for testing

jobs:
  ci-cd-pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: "Step 1: Checkout Code and Prepare Dependencies"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Step 1: Set up Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: clubhub-web/package-lock.json

      - name: "Step 1: Install Dependencies"
        working-directory: ./clubhub-web
        run: |
          npm ci
          echo "All dependencies installed successfully"
          echo "Dependencies ready for testing and building"

      - name: "Step 1: Prepare for Build"
        working-directory: ./clubhub-web
        run: |
          echo "Preparing for build..."
          echo "Build preparation completed successfully"

      - name: "Step 2: Set up Docker for Branch Build"
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64

      - name: "Step 2: Login to Docker Hub"
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Step 2: Generate Version Tag"
        id: version
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          # Extract version from commit message (format: vx.x.x) or use timestamp
          VERSION=$(git log -1 --pretty=%B | grep -o 'v[0-9]\+\.[0-9]\+\.[0-9]\+' | head -1)
          if [ -z "$VERSION" ]; then
            echo "No version found in commit message, generating timestamp version"
            if [ "$BRANCH_NAME" != "main" ]; then
              VERSION="v$(date +%Y.%m.%d-%H%M%S)-$BRANCH_NAME"
            else
              VERSION="v$(date +%Y.%m.%d-%H%M%S)"
            fi
          else
            if [ "$BRANCH_NAME" != "main" ]; then
              VERSION="$VERSION-$BRANCH_NAME"
            fi
          fi
          echo "Generated version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "branch=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: "Step 3: Build Docker Image with Branch and Version Tags"
        working-directory: ./clubhub-web
        run: |
          echo "Building Docker image with branch and version tags..."
          
          # Build once with branch and version tags only
          docker build \
            --secret id=NEXT_PUBLIC_FIREBASE_API_KEY,src=<(echo "${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}") \
            --secret id=NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,src=<(echo "${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}") \
            --secret id=NEXT_PUBLIC_FIREBASE_DATABASE_URL,src=<(echo "${{ secrets.NEXT_PUBLIC_FIREBASE_DATABASE_URL }}") \
            --secret id=NEXT_PUBLIC_FIREBASE_PROJECT_ID,src=<(echo "${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}") \
            --secret id=NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,src=<(echo "${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}") \
            --secret id=NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,src=<(echo "${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}") \
            --secret id=NEXT_PUBLIC_FIREBASE_APP_ID,src=<(echo "${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}") \
            --secret id=ADMIN_FIREBASE_PROJECT_ID,src=<(echo "${{ secrets.ADMIN_FIREBASE_PROJECT_ID }}") \
            --secret id=ADMIN_FIREBASE_CLIENT_EMAIL,src=<(echo "${{ secrets.ADMIN_FIREBASE_CLIENT_EMAIL }}") \
            --secret id=ADMIN_FIREBASE_PRIVATE_KEY,src=<(echo "${{ secrets.ADMIN_FIREBASE_PRIVATE_KEY }}") \
            -t ${{ secrets.DOCKER_USERNAME }}/clubhub:${{ steps.version.outputs.branch }} \
            -t ${{ secrets.DOCKER_USERNAME }}/clubhub:${{ steps.version.outputs.version }} \
            --platform linux/amd64 \
            .
          
          echo "Docker image built with tags:"
          echo "  - ${{ steps.version.outputs.branch }}"
          echo "  - ${{ steps.version.outputs.version }}"

      - name: "Step 3: Push Branch and Version Tags to Docker Hub"
        run: |
          echo "Pushing branch and version tagged images to Docker Hub..."
          docker push ${{ secrets.DOCKER_USERNAME }}/clubhub:${{ steps.version.outputs.branch }}
          docker push ${{ secrets.DOCKER_USERNAME }}/clubhub:${{ steps.version.outputs.version }}
          echo "Images pushed successfully:"
          echo "  - ${{ secrets.DOCKER_USERNAME }}/clubhub:${{ steps.version.outputs.branch }}"
          echo "  - ${{ secrets.DOCKER_USERNAME }}/clubhub:${{ steps.version.outputs.version }}"
          