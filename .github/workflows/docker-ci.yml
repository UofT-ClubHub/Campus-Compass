name: CI/CD Pipeline - Build and Deploy Docker Image

on:
  workflow_dispatch: # Allow manual triggering
  push:
    branches: [ main, develop ] # develop branch is for testing

jobs:
  ci-cd-pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: "Step 1: Checkout Code and Prepare Dependencies"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Step 1: Set up Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: clubhub-web/package-lock.json

      - name: "Step 1: Install Dependencies"
        working-directory: ./clubhub-web
        run: |
          npm ci
          echo "All dependencies installed successfully"
          echo "Dependencies ready for testing and building"

      - name: "Step 1: Prepare for Build"
        working-directory: ./clubhub-web
        run: |
          echo "Preparing for build..."
          echo "Build preparation completed successfully"

      - name: "Step 2: Set up Docker for Branch Build"
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/arm64,linux/amd64

      - name: "Step 2: Login to Docker Hub"
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Step 2: Build Docker Image for Current Branch"
        working-directory: ./clubhub-web
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          echo "Building Docker image for $BRANCH_NAME branch..."
          docker build -t ${{ secrets.DOCKER_USERNAME }}/clubhub:$BRANCH_NAME .
          echo "Docker image built successfully for $BRANCH_NAME branch"

      - name: "Step 2: Push Branch Image to Docker Hub"
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          echo "Pushing $BRANCH_NAME branch image to Docker Hub..."
          docker push ${{ secrets.DOCKER_USERNAME }}/clubhub:$BRANCH_NAME
          echo "$BRANCH_NAME branch image pushed to Docker Hub successfully"

      - name: "Step 3: Generate Version Tag"
        id: version
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          # Extract version from commit message (format: vx.x.x) or use timestamp
          VERSION=$(git log -1 --pretty=%B | grep -o 'v[0-9]\+\.[0-9]\+\.[0-9]\+' | head -1)
          if [ -z "$VERSION" ]; then
            echo "No version found in commit message, generating timestamp version"
            if [ "$BRANCH_NAME" != "main" ]; then
              VERSION="v$(date +%Y.%m.%d-%H%M%S)-$BRANCH_NAME"
            else
              VERSION="v$(date +%Y.%m.%d-%H%M%S)"
            fi
          else
            if [ "$BRANCH_NAME" != "main" ]; then
              VERSION="$VERSION-$BRANCH_NAME"
            fi
          fi
          echo "Generated version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: "Step 3: Build Docker Image with All Dependencies and Version"
        working-directory: ./clubhub-web
        run: |
          echo "Building production Docker image with all dependencies..."
          
          # Build the production image (no sensitive data in build process)
          docker build -t ${{ secrets.DOCKER_USERNAME }}/clubhub:${{ steps.version.outputs.version }} .
          docker build -t ${{ secrets.DOCKER_USERNAME }}/clubhub:latest .
          
          echo "Production Docker image built with version ${{ steps.version.outputs.version }}"

      - name: "Step 3: Push Versioned Image to Docker Hub"
        run: |
          echo "Pushing versioned images to Docker Hub..."
          docker push ${{ secrets.DOCKER_USERNAME }}/clubhub:${{ steps.version.outputs.version }}
          docker push ${{ secrets.DOCKER_USERNAME }}/clubhub:latest
          echo "Images pushed successfully:"
          echo "   - ${{ secrets.DOCKER_USERNAME }}/clubhub:${{ steps.version.outputs.version }}"
          echo "   - ${{ secrets.DOCKER_USERNAME }}/clubhub:latest"
          